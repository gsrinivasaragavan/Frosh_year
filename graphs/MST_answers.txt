1. Three most essential properties of MST
	-It spans all of the nodes in a graph (no disconnected nodes)
	-It spans all the nodes in the graph with the least amount of edges, or if there are weighted edges, the path with the least weight
	-It is a tree because it starts at a single node and ends up branching out to all the other nodes until all of them are spanned. A tree has one path between every two nodes, there is only one path to get from two arbritrary points A to B
2. If the edges are weighted, we should pick the node that has the least weighted path from the current node in order to create the MST. If the edges are not weighted, we will have to end up connecting all the edges at the end s picking the next edge is arbritary to an extent
3. Because we are looking at more than one node to connect to a node not in the tree, we must look at at all the possibe edges that will connect a node already in the tree ( we may have a N number of these such nodes) to the node needed, and from that selecte the node N(needed) and thereby edge corresponding to that path. We know it is finished when each node is a part of the tree and there are no disconnected nodes
4. Instead of picking the node that has the least weighted path from the current node already in the tree, Kruskal's algorithm looks at the edges themselves and picks the least weighted edge as long as that edge does not create a loop with another node. In this way, we are selecting the tree with the shortest path from the current tree we are at. When all the possible trees have been connected, we know that we are done. 